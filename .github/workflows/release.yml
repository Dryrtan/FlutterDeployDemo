name: 📱 Compilar e Distribuir Aplicativo

on:
  workflow_dispatch:

jobs:
  build-android:
    name: Build Android (APK & AAB)
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout do código
        uses: actions/checkout@v5

      - name: ☕ Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: 🐦 Configurar Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
          cache: true

      - name: 📦 Instalar dependências
        run: flutter pub get

      - name: 🏗️ Compilar APK
        run: flutter build apk --release

      - name: 🏗️ Compilar App Bundle
        run: flutter build appbundle --release

      # NOTA: Se você quiser enviar os artefatos como parte do workflow, descomente a seção abaixo.
      # - name: 📤 Enviar Artefatos Android
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: android-builds
      #     path: |
      #       build/app/outputs/flutter-apk/app-release.apk
      #       build/app/outputs/bundle/release/app-release.aab

      - name: 🚀 Deploy APK via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./build/app/outputs/flutter-apk/
          server-dir: ./ftp2/Dev/
          exclude: |
            **/*
            !app-release.apk

      - name: 🚀 Deploy AAB via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./build/app/outputs/bundle/release/
          server-dir: ./ftp2/Dev/
          exclude: |
            **/*
            !app-release.aab

  build-ios:
    name: Build iOS (IPA)
    runs-on: macos-latest
    steps:
      - name: 🛒 Checkout do código
        uses: actions/checkout@v5

      # NOTA: Você precisa configurar os segredos abaixo no seu repositório GitHub
      # para a assinatura de código do iOS funcionar.
      # P12_BASE64: Seu certificado .p12 codificado em base64.
      # P12_PASSWORD: A senha para o seu certificado.
      # PROVISIONING_PROFILE_BASE64: Seu perfil de provisionamento .mobileprovision codificado em base64.
      - name: 🔐 Instalar Certificados e Perfil de Provisionamento
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.P12_BASE64 }}
          p12-password: ${{ secrets.P12_PASSWORD }}
          provisioning-profiles-base64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}

      - name: 🐦 Configurar Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.4'
          cache: true

      - name: 📦 Instalar dependências
        run: flutter pub get

      - name: 🏗️ Compilar IPA
        run: flutter build ipa --release --export-options-plist=ios/ExportOptions.plist

      - name: 📤 Enviar Artefato iOS
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/ios/ipa/*.ipa

      - name: 🚀 Deploy iOS via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.6
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./build/ios/ipa/
          server-dir: ./ftp2/Dev/